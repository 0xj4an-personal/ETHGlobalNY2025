import { http } from "msw";
import type { X402SettleResponseResponse, X402SupportedPaymentKindsResponseResponse, X402VerifyResponseResponse } from "../coinbaseDeveloperPlatformAPIs.schemas.js";
export declare const getVerifyX402PaymentResponseMock: (overrideResponse?: Partial<X402VerifyResponseResponse>) => X402VerifyResponseResponse;
export declare const getSettleX402PaymentResponseMock: (overrideResponse?: Partial<X402SettleResponseResponse>) => X402SettleResponseResponse;
export declare const getSupportedX402PaymentKindsResponseMock: (overrideResponse?: Partial<X402SupportedPaymentKindsResponseResponse>) => X402SupportedPaymentKindsResponseResponse;
export declare const getVerifyX402PaymentMockHandler: (overrideResponse?: X402VerifyResponseResponse | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<X402VerifyResponseResponse> | X402VerifyResponseResponse)) => import("msw").HttpHandler;
export declare const getSettleX402PaymentMockHandler: (overrideResponse?: X402SettleResponseResponse | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<X402SettleResponseResponse> | X402SettleResponseResponse)) => import("msw").HttpHandler;
export declare const getSupportedX402PaymentKindsMockHandler: (overrideResponse?: X402SupportedPaymentKindsResponseResponse | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<X402SupportedPaymentKindsResponseResponse> | X402SupportedPaymentKindsResponseResponse)) => import("msw").HttpHandler;
export declare const getX402FacilitatorMock: () => import("msw").HttpHandler[];
//# sourceMappingURL=x402-facilitator.msw.d.ts.map